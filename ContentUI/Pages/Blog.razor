@page "/blog"
@*@inject IContentDb ContentDb*@

<table>
    <thead>
        <tr>
            <th>Title</th>
            <th>Body</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in list)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Body</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private record Record(string Title, string Body);
    private List<Record> list = new();

    protected override async Task OnParametersSetAsync()
    {
        //list = await Query
        //    .Join(ContentDb, db => db.ContentTitle, db => db.HtmlBody, (ct, hb) => ct.ContentId == hb.ContentId)
        //    .Asc(((ContentTitle ct, HtmlBody hb) _) => _.ct.Title)
        //    .Map((tuple) => new Record(tuple.Item1.Title, tuple.Item2.Body))
        //    .ToListAsync();
        //list =
        //    ContentDb.ContentTitle

        //await (
        //    from o in ContentDb.ContentTitle
        //    join p in ContentDb.HtmlBody on o.ContentId equals p.ContentId into htmlBodyGroup
        //    from htmlBody in htmlBodyGroup.DefaultIfEmpty()
        //    select new Record(o.Title, htmlBody.Body)
        //)
        //.ToListAsync();
    }
}